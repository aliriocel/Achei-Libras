{"version":3,"sources":["webpack:///src/app/cadastrar-interprete/cadastrar-interprete.page.html","webpack:///src/app/cadastrar-interprete/cadastrar-interprete-routing.module.ts","webpack:///src/app/cadastrar-interprete/cadastrar-interprete.module.ts","webpack:///src/app/cadastrar-interprete/cadastrar-interprete.page.scss","webpack:///src/app/cadastrar-interprete/cadastrar-interprete.page.ts"],"names":["routes","path","component","CadastrarInterpretePageRoutingModule","imports","forChild","exports","CadastrarInterpretePageModule","declarations","CadastrarInterpretePage","formBuilder","auth","navCtrl","menuCtrl","template","afs","teste","message","iniciarForm","formGroup","group","username","email","password","required","minLength","maxLength","nome","grupo","cpf","cep","endereco","user","controls","value","pass","createUserWithEmailAndPassword","newUser","collection","doc","uid","set","then","reset","console","log","error","loading","load","present","signInWithEmailAndPassword","data","dismiss","enable","navigateRoot","myAlert","selector"],"mappings":"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","file":"cadastrar-interprete-cadastrar-interprete-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  \\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"login\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>cadastrar-interprete</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n<img class=\\\"logo\\\" src=\\\"assets/img/logo2.png\\\" width=\\\"1500px\\\" height=\\\"250px\\\" />\\n<ion-content>\\n  <form [formGroup]=\\\"formGroup\\\">\\n    <ion-list lines=\\\"full\\\" class=\\\"ion-no-margin\\\">\\n      <ion-list-header lines=\\\"full\\\">\\n        <ion-label>\\n         Cadastre-se\\n        </ion-label>\\n        \\n      </ion-list-header>\\n\\n      <!-- Lembrar de colocar uma lista suspensa em grupos com dois grupos prÃ© selecionado-->\\n      <ion-item>\\n        <ion-label position=\\\"fixed\\\">grupo</ion-label>\\n        <ion-input  type=\\\"grupo\\\" placeholder=\\\"grupo\\\" formControlName=\\\"grupo\\\"></ion-input>\\n      </ion-item>\\n\\n      <ion-item>\\n        <ion-label position=\\\"fixed\\\">E-mail</ion-label>\\n        <ion-input type=\\\"username\\\" placeholder=\\\"Insira seu E-mail\\\" formControlName=\\\"username\\\"></ion-input>\\n      </ion-item>\\n\\n      <ion-item>\\n        <ion-label position=\\\"fixed\\\"> Senha</ion-label>\\n        <ion-input type=\\\"password\\\" placeholder=\\\"Insira sua Senha\\\" formControlName=\\\"password\\\"></ion-input>\\n      </ion-item>\\n\\n      <ion-item>\\n        <ion-label position=\\\"fixed\\\">Nome</ion-label>\\n        <ion-input  type=\\\"nome\\\" placeholder=\\\"Insira seu E-nome\\\" formControlName=\\\"nome\\\"></ion-input>\\n      </ion-item>\\n\\n      <ion-item>\\n        <ion-label position=\\\"fixed\\\">CPF</ion-label>\\n        <ion-input  type=\\\"cpf\\\" placeholder=\\\"Tipo de cpf\\\" formControlName=\\\"cpf\\\"></ion-input>\\n      </ion-item>\\n      \\n      <ion-item>\\n        <ion-label position=\\\"fixed\\\">CEP</ion-label>\\n        <ion-input  type=\\\"cep\\\" placeholder=\\\"Tipo de cep\\\" formControlName=\\\"cep\\\"></ion-input>\\n      </ion-item>\\n  \\n      <ion-item>\\n        <ion-label position=\\\"fixed\\\">Endereco</ion-label>\\n        <ion-input  type=\\\"endereco\\\" placeholder=\\\"Tipo de endereco\\\" formControlName=\\\"endereco\\\"></ion-input>\\n      </ion-item>\\n    </ion-list>\\n\\n    <ion-button expand=\\\"block\\\" (click)=\\\"cadastrarUsers()\\\">Cadastrar</ion-button>\\n  </form>\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { CadastrarInterpretePage } from './cadastrar-interprete.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CadastrarInterpretePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class CadastrarInterpretePageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { CadastrarInterpretePageRoutingModule } from './cadastrar-interprete-routing.module';\n\nimport { CadastrarInterpretePage } from './cadastrar-interprete.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    CadastrarInterpretePageRoutingModule,\n    ReactiveFormsModule\n  ],\n  declarations: [CadastrarInterpretePage]\n})\nexport class CadastrarInterpretePageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NhZGFzdHJhci1pbnRlcnByZXRlL2NhZGFzdHJhci1pbnRlcnByZXRlLnBhZ2Uuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MenuController, NavController } from '@ionic/angular';\nimport { TemplateService } from '../services/template.service';\n\n@Component({\n  selector: 'app-cadastrar-interprete',\n  templateUrl: './cadastrar-interprete.page.html',\n  styleUrls: ['./cadastrar-interprete.page.scss'],\n})\nexport class CadastrarInterpretePage implements OnInit {\n  formGroup: FormGroup;\n  public teste: any = {};\n  message: string = null;\n\n  constructor(private formBuilder: FormBuilder,\n    private auth: AngularFireAuth,\n    private navCtrl: NavController,\n    private menuCtrl: MenuController,\n    private template: TemplateService,\n    private afs: AngularFirestore,\n\n\n  ) {\n    this.iniciarForm();\n  }\n\n  ngOnInit() {\n  }\n  iniciarForm() {\n    this.formGroup = this.formBuilder.group({\n      \n      username: ['', [Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(13), Validators.maxLength(16)]],\n      nome: ['', [Validators.required, Validators.minLength(13), Validators.maxLength(16)]],\n      grupo: ['', [Validators.required, Validators.minLength(1), Validators.maxLength(16)]],\n      cpf: ['', [Validators.required, Validators.minLength(11), Validators.maxLength(11)]],\n      cep: ['', [Validators.required, Validators.minLength(8), Validators.maxLength(8)]],\n      endereco: ['', [Validators.required, Validators.minLength(1), Validators.maxLength(40)]],\n\n\n    })\n  }\n\n\n  async cadastrarUsers() {\n\n    let user = this.formGroup.controls['username'].value;\n    let pass = this.formGroup.controls['password'].value;\n\n\n    try {\n\n\n      const newUser = await this.auth.createUserWithEmailAndPassword(user, pass);\n\n\n      await this.afs.collection('Cadastros_de_interpretes').doc(newUser.user.uid).set(this.formGroup.value).then(() => {\n        this.message = \"InformaÃ§Ãµes cadastradas com sucesso!\";\n        this.formGroup.reset();\n      }).catch(() => {\n        this.message = \"Erro ao cadastrar as InformaÃ§Ãµes!\";\n      })\n      //this.afs.collection('Users').doc(newUser.user.uid).set(teste);\n\n      console.log('Cadastro efetuado com sucesso!');\n      console.log(user);\n\n      console.log(newUser);\n\n    } catch (error) {\n      console.error(error);\n\n\n    }\n\n  }\n  autenticar() {\n\n    let user = this.formGroup.controls['username'].value;\n    let pass = this.formGroup.controls['password'].value;\n\n\n    this.template.loading.then(load => {\n\n      load.present();\n      // admin2admin.com 123456\n\n      this.auth.signInWithEmailAndPassword(user, pass).then(data => {\n\n        load.dismiss();\n\n        this.menuCtrl.enable(true);\n        this.navCtrl.navigateRoot(['itensvencidos']);\n\n      }).catch(data => {\n        load.dismiss();\n        this.template.myAlert(\"UsuÃ¡rio ou senha invÃ¡lidos\");\n\n      });\n    })\n\n  }\n\n\n \n}\n"]}